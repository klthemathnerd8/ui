== Problem ==
Each square in a $5 \times 5$ grid is either filled or empty, and has up to eight adjacent neighboring squares, where neighboring squares share either a side or a corner. The grid is transformed by the following rules:

* Any filled square with two or three filled neighbors remains filled.

* Any empty square with exactly three filled neighbors becomes a filled square.

* All other squares remain empty or become empty.

A sample transformation is shown in the figure below.
<asy>
        import geometry;
        unitsize(0.6cm);

        void ds(pair x) {
            filldraw(x -- (1,0) + x -- (1,1) + x -- (0,1)+x -- cycle,mediumgray,invisible);
        }

        ds((1,1));
        ds((2,1));
        ds((3,1));
        ds((1,3));

        for (int i = 0; i <= 5; ++i) {
            draw((0,i)--(5,i));
            draw((i,0)--(i,5));
        }

        label("Initial", (2.5,-1));
        draw((6,2.5)--(8,2.5),Arrow);

        ds((10,2));
        ds((11,1));
        ds((11,0));

        for (int i = 0; i <= 5; ++i) {
            draw((9,i)--(14,i));
            draw((i+9,0)--(i+9,5));
        }

        label("Transformed", (11.5,-1));
</asy>
Suppose the $5 \times 5$ grid has a border of empty squares surrounding a $3 \times 3$ subgrid. How many initial configurations will lead to a transformed grid consisting of a single filled square in the center after a single transformation? (Rotations and reflections of the same configuration are considered different.)
<asy>
        import geometry;
        unitsize(0.6cm);

        void ds(pair x) {
            filldraw(x -- (1,0) + x -- (1,1) + x -- (0,1)+x -- cycle,mediumgray,invisible);
        }

        for (int i = 1; i < 4; ++ i) {
            for (int j = 1; j < 4; ++j) {
                label("?",(i + 0.5, j + 0.5));
            }
        }

        for (int i = 0; i <= 5; ++i) {
            draw((0,i)--(5,i));
            draw((i,0)--(i,5));
        }

        label("Initial", (2.5,-1));
        draw((6,2.5)--(8,2.5),Arrow);

        ds((11,2));

        for (int i = 0; i <= 5; ++i) {
            draw((9,i)--(14,i));
            draw((i+9,0)--(i+9,5));
        }

        label("Transformed", (11.5,-1));
</asy>
$\textbf{(A)}\ 14 \qquad\textbf{(B)}\ 18 \qquad\textbf{(C)}\ 22 \qquad\textbf{(D)}\ 26 \qquad\textbf{(E)}\ 30$
